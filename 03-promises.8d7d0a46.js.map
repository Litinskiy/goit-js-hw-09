{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SAEvC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAWtC,OATgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAM,GAE1BA,EAAA,GAGP,CAkBA,SAASQ,GAAUT,SAAEA,EAAQC,MAAEA,IAC7BS,QAAQC,IAAI,qBAAqBX,QAAeC,OAChDP,EAAAkB,OAAOC,QAAQ,qBAAqBb,QAAeC,MACrD,CAEA,SAASa,GAASd,SAAEA,EAAQC,MAAEA,IAC5BS,QAAQC,IAAI,oBAAoBX,QAAeC,OAC/CP,EAAAkB,OAAOG,QAAQ,oBAAoBf,QAAeC,MACpD,CAxBAL,EAAQoB,iBAAiB,UAEzB,SAAkBC,GAChBA,EAAEC,iBACF,MAAMC,EAAaC,OAAOxB,EAAQyB,SAASpB,MAAMqB,OAC3CC,EAAcH,OAAOxB,EAAQyB,SAASG,OAAOF,OAC7CG,EAAYL,OAAOxB,EAAQyB,SAASK,KAAKJ,OAC/C,IAAIK,EAAkBR,EAEtB,IAAK,IAAIS,EAAI,EAAGA,GAAKL,EAAaK,IAChC7B,EAAc6B,EAAGD,GAAiBE,KAAKpB,GAAWqB,MAAMhB,GACxDa,GAAmBF,CAEvB,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector(\".form\");\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nformRef.addEventListener(\"submit\", onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const delayValue = Number(formRef.elements.delay.value);\n  const amountValue = Number(formRef.elements.amount.value);\n  const stepValue = Number(formRef.elements.step.value);\n  let increasingDelay = delayValue;\n\n  for (let i = 1; i <= amountValue; i++) {\n    createPromise(i, increasingDelay).then(onSuccess).catch(onReject);\n    increasingDelay += stepValue;\n  }\n}\n\n\nfunction onSuccess({ position, delay }) {\n  console.log(`Fulfilled promise ${position} in ${delay}ms`);\n  Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n}\n \nfunction onReject({ position, delay }){\n  console.log(`Rejected promise ${position} in ${delay}ms`);\n  Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$onSuccess","console","log","Notify","success","$ce04d3a99e08e73b$var$onReject","failure","addEventListener","e","preventDefault","delayValue","Number","elements","value","amountValue","amount","stepValue","step","increasingDelay","i","then","catch"],"version":3,"file":"03-promises.8d7d0a46.js.map"}